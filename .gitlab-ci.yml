variables:
  MAVEN_OPTS: "-Dhttps.protocols=TLSv1.2 -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"
  MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true"
  SONAR_PROPS: "-Dsonar.projectKey=uniprot-store -Dsonar.organization=ebi-uniprot -Dsonar.qualitygate.timeout=1800 -Dsonar.qualitygate.wait=true"
  SONAR_HOST_URL: "https://sonarcloud.io"
  MAVEN_SETTINGS: "maven-settings.xml"
  URL_MAVEN_SETTINGS: "https://gitlab.ebi.ac.uk/api/v4/projects/${CONFIG_PROJECT_ID}/repository/files/${MAVEN_SETTINGS}/raw?ref=master&private_token=${GITLAB_USER_API_TOKEN}"
  UNIPROT_RESOURCES: "-Dcv.db.types.location=ftp://ftp.ebi.ac.uk/pub/databases/uniprot/current_release/knowledgebase/complete/docs/dbxref.txt"
  GIT_DEPTH: 0 # Tells git to fetch all the branches of the project, required by the analysis task
  SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"

image: maven:3.3.9-jdk-8
cache:
  key: "$CI_COMMIT_REF_SLUG"
  paths:
    - .m2/repository

stages:
  - setup
  - build
  - test
  - quality
  - deploy
  - bridge

store:settings:
  stage: setup
  before_script:
    - 'wget --no-cache --no-cookies -O ${MAVEN_SETTINGS} "${URL_MAVEN_SETTINGS}"'
  script:
    - if [ ! -f ${MAVEN_SETTINGS} ];
      then echo "CI settings missing";
      fi
  artifacts:
    when: always
    expire_in: 2 days
    paths:
      - ./${MAVEN_SETTINGS}

store:compile:
  stage: build
  script: mvn $MAVEN_CLI_OPTS clean compile test-compile -s ${MAVEN_SETTINGS}
  artifacts:
    when: always
    expire_in: 2 days
    paths:
      - ./*/target

store:unit:
  stage: test
  script:
    - 'mvn $MAVEN_CLI_OPTS $UNIPROT_RESOURCES -P coverage -Dtest="! *IT" -DfailIfNoTests=false install -s ${MAVEN_SETTINGS}'
    - 'mkdir -p ./uTest_reports'
    - 'find "$(pwd)" -path "*jacoco.xml" | while IFS= read -r item; do NAME="${item##*/}"; cp "$item" "./uTest_reports/${NAME%.*}-$((i++)).${NAME##*.}"; done'
    - 'find "$(pwd)" -path "*jacoco.xml" -delete'
  artifacts:
    when: always
    expire_in: 2 days
    paths:
      - ./uTest_reports
    reports:
      junit:
        - ./*/target/surefire-reports/TEST-*.xml

store:IT:
  stage: test
  script:
    - 'mvn $MAVEN_CLI_OPTS $UNIPROT_RESOURCES -P coverage -Dtest="*IT" -DfailIfNoTests=false install -s ${MAVEN_SETTINGS}'
    - 'mkdir -p ./iTest_reports'
    - 'find "$(pwd)" -path "*jacoco.xml" | while IFS= read -r item; do NAME="${item##*/}"; cp "$item" "./iTest_reports/${NAME%.*}-$((i++)).${NAME##*.}"; done'
    - 'find "$(pwd)" -path "*jacoco.xml" -delete'
  artifacts:
    when: always
    expire_in: 2 days
    paths:
      - ./iTest_reports
    reports:
      junit:
        - ./*/target/surefire-reports/TEST-*.xml

store:sonar:
  stage: quality
  script: mvn $MAVEN_CLI_OPTS -s ${MAVEN_SETTINGS} -Dsonar.coverage.jacoco.xmlReportPaths=$(find "$(pwd)" -path '*jacoco-*.xml' | sed 's/.*/&/' | tr '\n' ',') sonar:sonar ${SONAR_PROPS}
  dependencies:
    - store:unit
    - store:IT
    - store:compile
    - store:settings

store:deploy:
  stage: deploy
  script: mvn $MAVEN_CLI_OPTS -Dmaven.test.skip=true deploy -s ${MAVEN_SETTINGS}
  dependencies:
    - store:settings
    - store:compile
  only:
    - master

after_script:
  - 'pwd'
  - 'ls -al'
  - 'ls -al */'
  - 'ls -al */*/'
  - 'ls -al */*/*/'

rest-api:downstream:
  stage: bridge
  trigger: uniprot/deployment/mirror-uniprot-rest-api
  when: on_success
  only:
    - master
