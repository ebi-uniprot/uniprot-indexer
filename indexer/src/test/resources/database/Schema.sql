CREATE SCHEMA taxonomy;

CREATE TABLE taxonomy.v_public_node
(
     tax_id INTEGER,
     parent_id INTEGER,
     hidden INTEGER,
     internal VARCHAR(64),
     rank VARCHAR(64),
     gc_id VARCHAR(64),
     mgc_id VARCHAR(64),
     ncbi_scientific VARCHAR(64),
     ncbi_common VARCHAR(64),
     sptr_scientific VARCHAR(64),
     sptr_common VARCHAR(64),
     sptr_synonym VARCHAR(64),
     sptr_code VARCHAR(64),
     tax_code VARCHAR(64),
     sptr_ff VARCHAR(64),
     superregnum VARCHAR(64)
);

CREATE TABLE taxonomy.tax_public (
     tax_id INTEGER
);

create table taxonomy.V_PUBLIC_STRAIN
(
     TAX_ID     INTEGER,
     STRAIN_ID  INTEGER,
     NAME       VARCHAR2(64),
     NAME_CLASS VARCHAR2(64)
);

create table taxonomy.V_PUBLIC_HOST
(
     TAX_ID     INTEGER,
     HOST_ID    INTEGER
);

create table TAXONOMY.V_PUBLIC_URI
(
     TAX_ID     INTEGER,
     URI     VARCHAR2(64)
);

create table TAXONOMY.V_PUBLIC_NAME
(
     TAX_ID     INTEGER,
     PRIORITY   INTEGER,
     NAME       VARCHAR2(64)
);

CREATE SCHEMA SPTR;

create table SPTR.DBENTRY
(
     DBENTRY_ID     BIGINT,
     TAX_ID     BIGINT,
     ENTRY_TYPE     BIGINT,
     ACCESSION VARCHAR2(15),
     DELETED VARCHAR2(64),
     MERGE_STATUS VARCHAR2(64)
);

CREATE TABLE SPTR.COMMENT_BLOCK
(
  DBENTRY_ID BIGINT,
  COMMENT_TOPICS_ID BIGINT,
  COMMENT_BLOCK_ID BIGINT
);

CREATE TABLE SPTR.CV_COMMENT_TOPICS
(
  COMMENT_TOPICS_ID BIGINT,
  TOPIC VARCHAR2(30)
);

CREATE TABLE SPTR.COMMENT_STRUCTURE
(
  COMMENT_BLOCK_ID BIGINT,
  CC_STRUCTURE_TYPE_ID BIGINT,
  COMMENT_STRUCTURE_ID BIGINT
);

CREATE TABLE SPTR.CV_CC_STRUCTURE_TYPE
(
  CC_STRUCTURE_TYPE_ID BIGINT,
  "TYPE" VARCHAR2(30)
);

CREATE TABLE SPTR.COMMENT_SUBSTRUCTURE
(
  "TEXT" VARCHAR2(4000),
  COMMENT_STRUCTURE_ID BIGINT
);

CREATE TABLE SPTR.DATABASE_NAME
(
  ABBREVIATION VARCHAR2(30),
  DATABASE_ID VARCHAR2(5)
);

CREATE TABLE SPTR.DBENTRY_2_DATABASE
(
  DBENTRY_ID BIGINT,
  DATABASE_ID VARCHAR2(5)
);

create table SPTR.PROTEOME
(
  PROTEOME_ID             NUMBER(10),
  PROTEOME_TAXID          NUMBER(10),
  PUBLISH                 NUMBER(1),
  IS_COMPLETE             NUMBER(1),
  IS_REFERENCE            NUMBER(1)
);